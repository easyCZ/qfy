syntax = "proto3";

package synthetics.v1;

option go_package = "github.com/easyCZ/qfy/gen/v1;apiv1";


message Synthetic {
    string id = 1;
    string name = 2;

    SyntheticSpec spec = 3;
}

message SyntheticSpec {
    repeated Variable variables = 1;
    repeated Step steps = 2;
}

message Variable {
    string name = 1;
    string value = 2;
}

message Step {
    string name = 1;
    StepSpec spec = 2;
}

message StepSpec {
    string url = 1;
    string method = 2;
    string body = 3;
    repeated Extract extracts = 4;
}

message Extract {
    // name is the name of this extract
    string name = 1;

    oneof from {
        HeaderExtract header = 2;
        BodyExtract body = 3;
    }
}

message HeaderExtract {
    // header_name is the name of the header from which to extract data.
    string header_name = 1;

    // query is the query to run against the header value to extract data.
    // when not specified, the whole header will be extracted.
    ExtractQuery query = 2;
}

message BodyExtract {
    // query is the query to run against the body to extract data.
    ExtractQuery query = 1;
}

message ExtractQuery {
    oneof expression {
        // The expression is a JSON Query expression.
        string jq = 1;
        // The expression is a Regular expression.
        string regexp = 2;
        // The expression is a Yaml Query expression.
        string yq = 3;

    }
}

message ListSyntheticsRequest {}

service SyntheticsService {
    rpc ListSynthetics(ListSyntheticsRequest) returns (stream Synthetic);
}
